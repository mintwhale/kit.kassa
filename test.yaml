swagger: '2.0'
info:
  title: Тестовое API сервиса КИТ.КАССА
  description: Увеличьте средний чек за счет использования сервиса персональных рекомендаций КИТ.КАССА.
  version: '0.0.4'
host: api.kassa.mintwhale.ru
schemes:
  - http
basePath: /test
produces:
  - application/json
consumes:
  - application/json

paths:
  /recommendations:
    post:
      summary: Получить рекомендации.
      description: |
        Выдает персональные рекомендации на основании списка товаров.
        Рекомендации отсортированы в порядке убывания вероятности.
      operationId: app.post_recommendations
      parameters:
        - name: products
          in: body
          description: Список товаров.
          required: true
          schema:
            $ref: '#/definitions/ProductsList'
      responses:
        200:
          description: Рекомендованные товары.
          schema:
            type: object
            required:
              - id
              - products
            properties:
              id:
                description: Уникальный идентификатор рекомендации.
                type: string
                pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
              products:
                $ref: '#/definitions/ProductsList'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Unexpected'

  /sales:
    post:
      summary: Сохранить историю продаж.
      description: |
        Позволяет накапливать историю продаж для дальнейшего автоматического улучшения качества рекомендаций.
      operationId: app.post_sales
      produces:
        - application/json
        - text/plain
      parameters:
        - name: sales
          in: body
          description: История продаж.
          required: true
          schema:
            type: array
            uniqueItems: true
            minItems: 1
            maxItems: 1000
            items:
              type: object
              required:
                - id
                - date-time
                - products
              properties:
                id:
                  description: Уникальный идентификатор чека.
                  type: string
                  pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
                date-time:
                  description: Дата и время в формате RFC3339.
                  type: string
                  format: dateTime
                products:
                  $ref: '#/definitions/ProductsList'
      responses:
        200:
          description: История сохранена.
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Unexpected'

responses:
  BadRequest:
    description: Ошибка в запросе.
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: Запрос требует аутентификации.
    schema:
      $ref: '#/definitions/Error'
  Unexpected:
    description: Непредвиденная ошибка.
    schema:
      $ref: '#/definitions/Error'

definitions:
  Product:
    description: Уникальный идентификатор товара.
    type: string
    pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
  ProductsList:
    type: array
    description: Список товаров.
    items:
      $ref: '#/definitions/Product'
    minItems: 1
    maxItems: 100
    uniqueItems: true
  Error:
    description: Ошибка.
    type: object
    properties:
      type:
        description: Абсолютный URI [RFC3986], идентифицирующий тип ошибки.
        type: string
      title:
        description: Короткое, человекочитаемое описание ошибки.
        type: string
      status:
        description: Код статуса HTTP ([RFC7231], серция 6), сгенерированный сервером при возникновении ошибки.
        type: integer
        format: int32
        minimum: 100
      detail:
        description: Детальное, человекочитаемое описание ошибки.
        type: string
      instance:
        description: Абсолютный URI, идентифицирующий ошибку.
        type: string
    example:
      type: about:blank
      title: Not Found
      status: 404
      detail: The requested document was not found on the server.

securityDefinitions:
  api_key:
    description: Авторизация по ключу API.
    type: apiKey
    name: Api-Key
    in: header

security:
  - api_key: []
