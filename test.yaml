swagger: '2.0'
info:
  title: Тестовое API сервиса КИТ.КАССА
  description: Увеличьте средний чек за счет использования сервиса персональных рекомендаций КИТ.КАССА.
  version: '0.3.1'
host: api.kassa.mintwhale.ru
schemes:
  - http
basePath: /test
produces:
  - application/json
consumes:
  - application/json

paths:
  /recommendations:
    post:
      summary: Получить рекомендации.
      description: |
        Выдает персональные рекомендации на основании списка товаров.
        Рекомендации отсортированы в порядке убывания вероятности.
      operationId: app.post_recommendations
      parameters:
        - name: receipt
          in: body
          description: Информация о чеке.
          required: true
          schema:
            $ref: '#/definitions/Receipt'
      responses:
        200:
          description: Рекомендованные товары.
          schema:
            type: object
            required:
              - id
              - recommendations
            properties:
              id:
                description: Уникальный идентификатор (UUID, [RFC4122]) рекомендации.
                type: string
                pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
              recommendations:
                $ref: '#/definitions/RecommendationsList'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Unexpected'

  /sales:
    post:
      summary: Сохранить историю продаж.
      description: |
        Позволяет накапливать историю продаж для дальнейшего автоматического улучшения качества рекомендаций.
      operationId: app.post_sales
      produces:
        - application/json
        - text/plain
      parameters:
        - name: sales
          in: body
          description: История продаж.
          required: true
          schema:
            type: array
            uniqueItems: true
            minItems: 1
            maxItems: 1000
            items:
              $ref: '#/definitions/Receipt'
      responses:
        200:
          description: История сохранена.
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Unexpected'

responses:
  BadRequest:
    description: Ошибка в запросе.
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Запрос требует аутентификации.
    schema:
      $ref: '#/definitions/Error'

  Unexpected:
    description: Непредвиденная ошибка.
    schema:
      $ref: '#/definitions/Error'

definitions:
  Item:
    description: Информация о товаре.
    type: object
    required:
      - uuid
      - name
      - itemType
      - barcode
      - quantity
    properties:
      uuid:
        description: Уникальный идентификатор (UUID) товара.
        type: string
        pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
      name:
        # TODO: Определить максимальную длину
        description: Наименование товара.
        type: string
      itemType:
        # TODO: Определить допустимые варианты или максимальную длину
        description: Тип товара.
        type: string
      barcode:
        # TODO: Определить формат
        description: Штриховой код товара.
        type: string
      quantity:
        description: Количество товара.
        type: integer
        format: int32
        minimum: 1

  Receipt:
    description: Информация о чеке.
    type: object
    required:
      - uuid
      - deviceUuid
      - storeUuid
      - dateTime
      - items
    properties:
      uuid:
        description: Уникальный идентификатор (UUID) чека.
        type: string
        pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
      deviceUuid:
        description: Уникальный идентификатор (UUID) терминала.
        type: string
        pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
      storeUuid:
        description: Уникальный идентификатор (UUID) магазина.
        type: string
        pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
      clientUuid:
        description: Уникальный идентификатор (UUID) клиента.
        type: string
        pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'
      dateTime:
        description: Локальная дата и время магазина в формате [RFC3339].
        type: string
        format: date-time
      items:
        $ref: '#/definitions/ItemsList'

  Recommendation:
    description: Рекомендованный товар (UUID).
    type: string
    pattern: '^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$'

  ItemsList:
    type: array
    description: Список товаров.
    items:
      $ref: '#/definitions/Item'
    minItems: 1
    maxItems: 100
    uniqueItems: true

  RecommendationsList:
    type: array
    description: Список рекомендованных товаров.
    items:
      $ref: '#/definitions/Recommendation'
    minItems: 0
    maxItems: 100
    uniqueItems: true

  Error:
    description: Ошибка.
    type: object
    properties:
      type:
        description: Абсолютный URI [RFC3986], идентифицирующий тип ошибки.
        type: string
      title:
        description: Короткое, человекочитаемое описание ошибки.
        type: string
      status:
        description: Код статуса HTTP ([RFC7231], серция 6), сгенерированный сервером при возникновении ошибки.
        type: integer
        format: int32
        minimum: 100
      detail:
        description: Детальное, человекочитаемое описание ошибки.
        type: string
      instance:
        description: Абсолютный URI, идентифицирующий ошибку.
        type: string
    example:
      type: about:blank
      title: Not Found
      status: 404
      detail: The requested document was not found on the server.

securityDefinitions:
  api_key:
    description: Авторизация по ключу API.
    type: apiKey
    name: Api-Key
    in: header

security:
  - api_key: []
